[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=2",
]

[project]
name = "pixiv-bulk-downloader"
version = "3.0.0"
description = "Pixiv Bulk Downloader for bookmarks and works of following authors"
readme = "README.md"
keywords = [
  "cli",
  "commandline-tool",
  "downloader",
  "pixivpy",
]
license = { text = "MIT" }
authors = [
  { name = "eggplants", email = "w10776e8w@yahoo.co.jp" },
]
requires-python = ">=3.9,<4"
classifiers = [
  "Environment :: Console",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "gppt>=4.1,<5",
  "pixivpy3>=3.7.5,<4",
  "pwinput>=1.0.3,<2",
]
urls.Repository = "https://github.com/eggplants/pixiv-bulk-downloader"
scripts.pbd = "pixiv_bulk_downloader.main:main"

[tool.poetry]
requires-poetry = ">=2.0"
packages = [
  { include = "pixiv_bulk_downloader" },
]

[tool.poetry.group.dev.dependencies]
taskipy = "^1.12.2"
pre-commit = "^3.7.0"
black = "^24.3.0"
ruff = ">=0.4.2,<0.7.0"
mypy = "^1.9.0"

[tool.poetry.requires-plugins]
poetry-plugin-shell = ">=1.0"

[tool.black]
target-version = [
  "py312",
]

[tool.ruff]
lint.select = [
  "ALL",
]
lint.ignore = [
  "D",
]
lint.per-file-ignores."*.py" = [
  "T201", # `print` found
]
lint.per-file-ignores."tests/*.py" = [
  "S101", # Use of assert detected
]
lint.allowed-confusables = [
  "Ôºè",
]
lint.pydocstyle.convention = "google"

[tool.mypy]
python_version = "3.12"
strict = true

# much harder
# disallow_any_decorated = true
# disallow_any_explicit = true
# disallow_any_expr = true
disallow_any_unimported = true
implicit_optional = false      # for mypy<1.0
strict_concatenate = true
warn_unreachable = true

# message
pretty = true
show_column_numbers = true
show_error_context = true

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "strict"

[tool.taskipy.tasks]
lint = "pre-commit run -a"
profile = "python -m cProfile"
